---
apiVersion: v1
kind: Namespace
metadata:
  name: benthos-system

#---
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: benthos-env
#  namespace: benthos-system
#data:
#  STUFF: thing

#---
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: benthos-config
#  namespace: benthos-system
#data:
#  config.yaml: |
#    stuff:
#      things: []

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: benthos
  name: benthos-service
  namespace: benthos-system
spec:
  ports:
  - name: benthos
    port: 4195
    protocol: TCP
    targetPort: benthos
  type: ClusterIP
  selector:     
    app.kubernetes.io/instance: benthos

---
apiVersion: v1
kind: Pod
metadata:
  name: benthos-pod
  namespace: benthos-system
  labels:
    app.kubernetes.io/instance: benthos
spec:
  restartPolicy: Always
  #volumes:
  #- name: config-yaml
  #  configMap:
  #    name: benthos-config
  #    items:
  #    - key: config.yaml
  #      path: config.yaml
  hostname: myhostname
  containers:
  - name: benthos-container
    image: ghcr.io/benthosdev/benthos
    imagePullPolicy: IfNotPresent
    #envFrom:
    #- configMapRef:
    #    name: benthos-env
    #volumeMounts:
    #- name: config-yaml
    #  mountPath: /etc/benthos
    #  readOnly: true
    #args: ["streams"]
    ports:
    - containerPort: 4195
      name: benthos
      protocol: TCP
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /streams
        port: benthos
        scheme: HTTP
      initialDelaySeconds: 2
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /streams
        port: benthos
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
...
# vim: set filetype=yaml:
